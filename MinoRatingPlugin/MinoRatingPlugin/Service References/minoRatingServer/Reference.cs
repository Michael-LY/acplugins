//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MinoRatingPlugin.minoRatingServer {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PluginReaction", Namespace="http://schemas.datacontract.org/2004/07/MinoRating.Core.proxy")]
    [System.SerializableAttribute()]
    public partial class PluginReaction : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte CarIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DelayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MinoRatingPlugin.minoRatingServer.PluginReaction.ReactionType ReactionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SteamIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte CarId {
            get {
                return this.CarIdField;
            }
            set {
                if ((this.CarIdField.Equals(value) != true)) {
                    this.CarIdField = value;
                    this.RaisePropertyChanged("CarId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Delay {
            get {
                return this.DelayField;
            }
            set {
                if ((this.DelayField.Equals(value) != true)) {
                    this.DelayField = value;
                    this.RaisePropertyChanged("Delay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MinoRatingPlugin.minoRatingServer.PluginReaction.ReactionType Reaction {
            get {
                return this.ReactionField;
            }
            set {
                if ((this.ReactionField.Equals(value) != true)) {
                    this.ReactionField = value;
                    this.RaisePropertyChanged("Reaction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SteamId {
            get {
                return this.SteamIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SteamIdField, value) != true)) {
                    this.SteamIdField = value;
                    this.RaisePropertyChanged("SteamId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="PluginReaction.ReactionType", Namespace="http://schemas.datacontract.org/2004/07/MinoRating.Core.proxy")]
        public enum ReactionType : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            None = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Whisper = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Broadcast = 2,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Ballast = 3,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Pit = 4,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Kick = 5,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Ban = 6,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            RestartSession = 7,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            NextSession = 8,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            AdminCmd = 9,
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TrackDefinition", Namespace="http://schemas.datacontract.org/2004/07/MinoRating.Core.proxy")]
    [System.SerializableAttribute()]
    public partial class TrackDefinition : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float LengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float[] PitAreaRectangleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float[] PitExitRectangleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float[] SplitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TrackNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Length {
            get {
                return this.LengthField;
            }
            set {
                if ((this.LengthField.Equals(value) != true)) {
                    this.LengthField = value;
                    this.RaisePropertyChanged("Length");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float[] PitAreaRectangle {
            get {
                return this.PitAreaRectangleField;
            }
            set {
                if ((object.ReferenceEquals(this.PitAreaRectangleField, value) != true)) {
                    this.PitAreaRectangleField = value;
                    this.RaisePropertyChanged("PitAreaRectangle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float[] PitExitRectangle {
            get {
                return this.PitExitRectangleField;
            }
            set {
                if ((object.ReferenceEquals(this.PitExitRectangleField, value) != true)) {
                    this.PitExitRectangleField = value;
                    this.RaisePropertyChanged("PitExitRectangle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float[] Splits {
            get {
                return this.SplitsField;
            }
            set {
                if ((object.ReferenceEquals(this.SplitsField, value) != true)) {
                    this.SplitsField = value;
                    this.RaisePropertyChanged("Splits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TrackName {
            get {
                return this.TrackNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TrackNameField, value) != true)) {
                    this.TrackNameField = value;
                    this.RaisePropertyChanged("TrackName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LeaderboardEntry", Namespace="http://schemas.datacontract.org/2004/07/MinoRating.Core.proxy")]
    [System.SerializableAttribute()]
    public partial class LeaderboardEntry : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CarIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DriverIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LapsDrivenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint TimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CarId {
            get {
                return this.CarIdField;
            }
            set {
                if ((this.CarIdField.Equals(value) != true)) {
                    this.CarIdField = value;
                    this.RaisePropertyChanged("CarId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DriverId {
            get {
                return this.DriverIdField;
            }
            set {
                if ((object.ReferenceEquals(this.DriverIdField, value) != true)) {
                    this.DriverIdField = value;
                    this.RaisePropertyChanged("DriverId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LapsDriven {
            get {
                return this.LapsDrivenField;
            }
            set {
                if ((this.LapsDrivenField.Equals(value) != true)) {
                    this.LapsDrivenField = value;
                    this.RaisePropertyChanged("LapsDriven");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Rank {
            get {
                return this.RankField;
            }
            set {
                if ((this.RankField.Equals(value) != true)) {
                    this.RankField = value;
                    this.RaisePropertyChanged("Rank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConsistencyReport", Namespace="http://schemas.datacontract.org/2004/07/MinoRating.Core.proxy")]
    [System.SerializableAttribute()]
    public partial class ConsistencyReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte CutsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsInlapField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LapStartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint LaptimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte MaxGearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float MaxVelocityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte MinGearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float MinVelocityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte SplitResolutionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint[] SplitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte carIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Cuts {
            get {
                return this.CutsField;
            }
            set {
                if ((this.CutsField.Equals(value) != true)) {
                    this.CutsField = value;
                    this.RaisePropertyChanged("Cuts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsInlap {
            get {
                return this.IsInlapField;
            }
            set {
                if ((this.IsInlapField.Equals(value) != true)) {
                    this.IsInlapField = value;
                    this.RaisePropertyChanged("IsInlap");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LapStart {
            get {
                return this.LapStartField;
            }
            set {
                if ((this.LapStartField.Equals(value) != true)) {
                    this.LapStartField = value;
                    this.RaisePropertyChanged("LapStart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint Laptime {
            get {
                return this.LaptimeField;
            }
            set {
                if ((this.LaptimeField.Equals(value) != true)) {
                    this.LaptimeField = value;
                    this.RaisePropertyChanged("Laptime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte MaxGear {
            get {
                return this.MaxGearField;
            }
            set {
                if ((this.MaxGearField.Equals(value) != true)) {
                    this.MaxGearField = value;
                    this.RaisePropertyChanged("MaxGear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float MaxVelocity {
            get {
                return this.MaxVelocityField;
            }
            set {
                if ((this.MaxVelocityField.Equals(value) != true)) {
                    this.MaxVelocityField = value;
                    this.RaisePropertyChanged("MaxVelocity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte MinGear {
            get {
                return this.MinGearField;
            }
            set {
                if ((this.MinGearField.Equals(value) != true)) {
                    this.MinGearField = value;
                    this.RaisePropertyChanged("MinGear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float MinVelocity {
            get {
                return this.MinVelocityField;
            }
            set {
                if ((this.MinVelocityField.Equals(value) != true)) {
                    this.MinVelocityField = value;
                    this.RaisePropertyChanged("MinVelocity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte SplitResolution {
            get {
                return this.SplitResolutionField;
            }
            set {
                if ((this.SplitResolutionField.Equals(value) != true)) {
                    this.SplitResolutionField = value;
                    this.RaisePropertyChanged("SplitResolution");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint[] Splits {
            get {
                return this.SplitsField;
            }
            set {
                if ((object.ReferenceEquals(this.SplitsField, value) != true)) {
                    this.SplitsField = value;
                    this.RaisePropertyChanged("Splits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte carId {
            get {
                return this.carIdField;
            }
            set {
                if ((this.carIdField.Equals(value) != true)) {
                    this.carIdField = value;
                    this.RaisePropertyChanged("carId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MRDistanceHelper", Namespace="http://schemas.datacontract.org/2004/07/MinoRating.Core.proxy")]
    [System.SerializableAttribute()]
    public partial class MRDistanceHelper : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float MetersAttackRangeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float MetersBlueflaggingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float MetersCombatRangeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float MetersDrivenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OvertakesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float SplinePosCurrentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float SplinePosLastField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint SplinePosTimeCurrentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint SplinePosTimeLastField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float MetersAttackRange {
            get {
                return this.MetersAttackRangeField;
            }
            set {
                if ((this.MetersAttackRangeField.Equals(value) != true)) {
                    this.MetersAttackRangeField = value;
                    this.RaisePropertyChanged("MetersAttackRange");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float MetersBlueflagging {
            get {
                return this.MetersBlueflaggingField;
            }
            set {
                if ((this.MetersBlueflaggingField.Equals(value) != true)) {
                    this.MetersBlueflaggingField = value;
                    this.RaisePropertyChanged("MetersBlueflagging");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float MetersCombatRange {
            get {
                return this.MetersCombatRangeField;
            }
            set {
                if ((this.MetersCombatRangeField.Equals(value) != true)) {
                    this.MetersCombatRangeField = value;
                    this.RaisePropertyChanged("MetersCombatRange");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float MetersDriven {
            get {
                return this.MetersDrivenField;
            }
            set {
                if ((this.MetersDrivenField.Equals(value) != true)) {
                    this.MetersDrivenField = value;
                    this.RaisePropertyChanged("MetersDriven");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Overtakes {
            get {
                return this.OvertakesField;
            }
            set {
                if ((this.OvertakesField.Equals(value) != true)) {
                    this.OvertakesField = value;
                    this.RaisePropertyChanged("Overtakes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float SplinePosCurrent {
            get {
                return this.SplinePosCurrentField;
            }
            set {
                if ((this.SplinePosCurrentField.Equals(value) != true)) {
                    this.SplinePosCurrentField = value;
                    this.RaisePropertyChanged("SplinePosCurrent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float SplinePosLast {
            get {
                return this.SplinePosLastField;
            }
            set {
                if ((this.SplinePosLastField.Equals(value) != true)) {
                    this.SplinePosLastField = value;
                    this.RaisePropertyChanged("SplinePosLast");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint SplinePosTimeCurrent {
            get {
                return this.SplinePosTimeCurrentField;
            }
            set {
                if ((this.SplinePosTimeCurrentField.Equals(value) != true)) {
                    this.SplinePosTimeCurrentField = value;
                    this.RaisePropertyChanged("SplinePosTimeCurrent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint SplinePosTimeLast {
            get {
                return this.SplinePosTimeLastField;
            }
            set {
                if ((this.SplinePosTimeLastField.Equals(value) != true)) {
                    this.SplinePosTimeLastField = value;
                    this.RaisePropertyChanged("SplinePosTimeLast");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CarUpdateHistory", Namespace="http://schemas.datacontract.org/2004/07/MinoRating.Core.proxy")]
    [System.SerializableAttribute()]
    public partial class CarUpdateHistory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort EngineRPMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte GearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float NormalizedSplinePositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float[] VelocityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float[] WorldPositionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Created {
            get {
                return this.CreatedField;
            }
            set {
                if ((this.CreatedField.Equals(value) != true)) {
                    this.CreatedField = value;
                    this.RaisePropertyChanged("Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort EngineRPM {
            get {
                return this.EngineRPMField;
            }
            set {
                if ((this.EngineRPMField.Equals(value) != true)) {
                    this.EngineRPMField = value;
                    this.RaisePropertyChanged("EngineRPM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Gear {
            get {
                return this.GearField;
            }
            set {
                if ((this.GearField.Equals(value) != true)) {
                    this.GearField = value;
                    this.RaisePropertyChanged("Gear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float NormalizedSplinePosition {
            get {
                return this.NormalizedSplinePositionField;
            }
            set {
                if ((this.NormalizedSplinePositionField.Equals(value) != true)) {
                    this.NormalizedSplinePositionField = value;
                    this.RaisePropertyChanged("NormalizedSplinePosition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float[] Velocity {
            get {
                return this.VelocityField;
            }
            set {
                if ((object.ReferenceEquals(this.VelocityField, value) != true)) {
                    this.VelocityField = value;
                    this.RaisePropertyChanged("Velocity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float[] WorldPosition {
            get {
                return this.WorldPositionField;
            }
            set {
                if ((object.ReferenceEquals(this.WorldPositionField, value) != true)) {
                    this.WorldPositionField = value;
                    this.RaisePropertyChanged("WorldPosition");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PluginReactionCollection", Namespace="http://schemas.datacontract.org/2004/07/MinoRating.Core.proxy")]
    [System.SerializableAttribute()]
    public partial class PluginReactionCollection : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MinoRatingPlugin.minoRatingServer.PluginReaction[] ReactionsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MinoRatingPlugin.minoRatingServer.PluginReaction[] Reactions {
            get {
                return this.ReactionsField;
            }
            set {
                if ((object.ReferenceEquals(this.ReactionsField, value) != true)) {
                    this.ReactionsField = value;
                    this.RaisePropertyChanged("Reactions");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Situation", Namespace="http://schemas.datacontract.org/2004/07/MinoRating.Entities.Domain")]
    [System.SerializableAttribute()]
    public partial class Situation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MinoRatingPlugin.minoRatingServer.Situation.AnalysisEnum AnalysisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float DistributionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MinoRatingPlugin.minoRatingServer.Driver DriverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DriverNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MinoRatingPlugin.minoRatingServer.Driver OtherDriverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OtherDriverNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float ProbabilityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RaceTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SessionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] SituationDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MinoRatingPlugin.minoRatingServer.Situation.StatusEnum StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TrackField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MinoRatingPlugin.minoRatingServer.Situation.AnalysisEnum Analysis {
            get {
                return this.AnalysisField;
            }
            set {
                if ((this.AnalysisField.Equals(value) != true)) {
                    this.AnalysisField = value;
                    this.RaisePropertyChanged("Analysis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Distribution {
            get {
                return this.DistributionField;
            }
            set {
                if ((this.DistributionField.Equals(value) != true)) {
                    this.DistributionField = value;
                    this.RaisePropertyChanged("Distribution");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MinoRatingPlugin.minoRatingServer.Driver Driver {
            get {
                return this.DriverField;
            }
            set {
                if ((object.ReferenceEquals(this.DriverField, value) != true)) {
                    this.DriverField = value;
                    this.RaisePropertyChanged("Driver");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DriverName {
            get {
                return this.DriverNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DriverNameField, value) != true)) {
                    this.DriverNameField = value;
                    this.RaisePropertyChanged("DriverName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndedOn {
            get {
                return this.EndedOnField;
            }
            set {
                if ((this.EndedOnField.Equals(value) != true)) {
                    this.EndedOnField = value;
                    this.RaisePropertyChanged("EndedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MinoRatingPlugin.minoRatingServer.Driver OtherDriver {
            get {
                return this.OtherDriverField;
            }
            set {
                if ((object.ReferenceEquals(this.OtherDriverField, value) != true)) {
                    this.OtherDriverField = value;
                    this.RaisePropertyChanged("OtherDriver");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OtherDriverName {
            get {
                return this.OtherDriverNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OtherDriverNameField, value) != true)) {
                    this.OtherDriverNameField = value;
                    this.RaisePropertyChanged("OtherDriverName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Probability {
            get {
                return this.ProbabilityField;
            }
            set {
                if ((this.ProbabilityField.Equals(value) != true)) {
                    this.ProbabilityField = value;
                    this.RaisePropertyChanged("Probability");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RaceType {
            get {
                return this.RaceTypeField;
            }
            set {
                if ((this.RaceTypeField.Equals(value) != true)) {
                    this.RaceTypeField = value;
                    this.RaisePropertyChanged("RaceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SessionId {
            get {
                return this.SessionIdField;
            }
            set {
                if ((this.SessionIdField.Equals(value) != true)) {
                    this.SessionIdField = value;
                    this.RaisePropertyChanged("SessionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] SituationData {
            get {
                return this.SituationDataField;
            }
            set {
                if ((object.ReferenceEquals(this.SituationDataField, value) != true)) {
                    this.SituationDataField = value;
                    this.RaisePropertyChanged("SituationData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartedOn {
            get {
                return this.StartedOnField;
            }
            set {
                if ((this.StartedOnField.Equals(value) != true)) {
                    this.StartedOnField = value;
                    this.RaisePropertyChanged("StartedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MinoRatingPlugin.minoRatingServer.Situation.StatusEnum Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Track {
            get {
                return this.TrackField;
            }
            set {
                if ((object.ReferenceEquals(this.TrackField, value) != true)) {
                    this.TrackField = value;
                    this.RaisePropertyChanged("Track");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="Situation.AnalysisEnum", Namespace="http://schemas.datacontract.org/2004/07/MinoRating.Entities.Domain")]
        public enum AnalysisEnum : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            NotCalculated = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Ignored = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            RearEnded = 2,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            UnsafeRecovery = 3,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            DiveBomb = 4,
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="Situation.StatusEnum", Namespace="http://schemas.datacontract.org/2004/07/MinoRating.Entities.Domain")]
        public enum StatusEnum : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Initialized = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Unfinished = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Finished = 2,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Calculated = 3,
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Driver", Namespace="http://schemas.datacontract.org/2004/07/MinoRating.Entities.Domain")]
    [System.SerializableAttribute()]
    public partial class Driver : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AsshatFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ConsistencyEarnedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ConsistencyRatingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MinoRatingPlugin.minoRatingServer.Consistency ConsistencyRecordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ContactPointsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ContributorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MinoRatingPlugin.minoRatingServer.T_Session CurrentDbSessionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> CurrentSessionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> DebuggerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DeletedContactPointsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DeletedDistanceAttackKmField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DeletedDistanceCombatKmField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DeletedDistanceKmField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DeletedMassAccidentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DeletedSessionsDrivenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DistanceAttackKmField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DistanceCombatKmField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DistanceKmField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ELOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ELOBetaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GradeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal IncidentsPerKmField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastGradeUpdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MassAccidentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SessionsDrivenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SteamHashField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SteamIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AsshatFactor {
            get {
                return this.AsshatFactorField;
            }
            set {
                if ((this.AsshatFactorField.Equals(value) != true)) {
                    this.AsshatFactorField = value;
                    this.RaisePropertyChanged("AsshatFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ConsistencyEarned {
            get {
                return this.ConsistencyEarnedField;
            }
            set {
                if ((this.ConsistencyEarnedField.Equals(value) != true)) {
                    this.ConsistencyEarnedField = value;
                    this.RaisePropertyChanged("ConsistencyEarned");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ConsistencyRating {
            get {
                return this.ConsistencyRatingField;
            }
            set {
                if ((this.ConsistencyRatingField.Equals(value) != true)) {
                    this.ConsistencyRatingField = value;
                    this.RaisePropertyChanged("ConsistencyRating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MinoRatingPlugin.minoRatingServer.Consistency ConsistencyRecord {
            get {
                return this.ConsistencyRecordField;
            }
            set {
                if ((object.ReferenceEquals(this.ConsistencyRecordField, value) != true)) {
                    this.ConsistencyRecordField = value;
                    this.RaisePropertyChanged("ConsistencyRecord");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ContactPoints {
            get {
                return this.ContactPointsField;
            }
            set {
                if ((this.ContactPointsField.Equals(value) != true)) {
                    this.ContactPointsField = value;
                    this.RaisePropertyChanged("ContactPoints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Contributor {
            get {
                return this.ContributorField;
            }
            set {
                if ((this.ContributorField.Equals(value) != true)) {
                    this.ContributorField = value;
                    this.RaisePropertyChanged("Contributor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MinoRatingPlugin.minoRatingServer.T_Session CurrentDbSession {
            get {
                return this.CurrentDbSessionField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentDbSessionField, value) != true)) {
                    this.CurrentDbSessionField = value;
                    this.RaisePropertyChanged("CurrentDbSession");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> CurrentSession {
            get {
                return this.CurrentSessionField;
            }
            set {
                if ((this.CurrentSessionField.Equals(value) != true)) {
                    this.CurrentSessionField = value;
                    this.RaisePropertyChanged("CurrentSession");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Debugger {
            get {
                return this.DebuggerField;
            }
            set {
                if ((this.DebuggerField.Equals(value) != true)) {
                    this.DebuggerField = value;
                    this.RaisePropertyChanged("Debugger");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DeletedContactPoints {
            get {
                return this.DeletedContactPointsField;
            }
            set {
                if ((this.DeletedContactPointsField.Equals(value) != true)) {
                    this.DeletedContactPointsField = value;
                    this.RaisePropertyChanged("DeletedContactPoints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DeletedDistanceAttackKm {
            get {
                return this.DeletedDistanceAttackKmField;
            }
            set {
                if ((this.DeletedDistanceAttackKmField.Equals(value) != true)) {
                    this.DeletedDistanceAttackKmField = value;
                    this.RaisePropertyChanged("DeletedDistanceAttackKm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DeletedDistanceCombatKm {
            get {
                return this.DeletedDistanceCombatKmField;
            }
            set {
                if ((this.DeletedDistanceCombatKmField.Equals(value) != true)) {
                    this.DeletedDistanceCombatKmField = value;
                    this.RaisePropertyChanged("DeletedDistanceCombatKm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DeletedDistanceKm {
            get {
                return this.DeletedDistanceKmField;
            }
            set {
                if ((this.DeletedDistanceKmField.Equals(value) != true)) {
                    this.DeletedDistanceKmField = value;
                    this.RaisePropertyChanged("DeletedDistanceKm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DeletedMassAccidents {
            get {
                return this.DeletedMassAccidentsField;
            }
            set {
                if ((this.DeletedMassAccidentsField.Equals(value) != true)) {
                    this.DeletedMassAccidentsField = value;
                    this.RaisePropertyChanged("DeletedMassAccidents");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DeletedSessionsDriven {
            get {
                return this.DeletedSessionsDrivenField;
            }
            set {
                if ((this.DeletedSessionsDrivenField.Equals(value) != true)) {
                    this.DeletedSessionsDrivenField = value;
                    this.RaisePropertyChanged("DeletedSessionsDriven");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DistanceAttackKm {
            get {
                return this.DistanceAttackKmField;
            }
            set {
                if ((this.DistanceAttackKmField.Equals(value) != true)) {
                    this.DistanceAttackKmField = value;
                    this.RaisePropertyChanged("DistanceAttackKm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DistanceCombatKm {
            get {
                return this.DistanceCombatKmField;
            }
            set {
                if ((this.DistanceCombatKmField.Equals(value) != true)) {
                    this.DistanceCombatKmField = value;
                    this.RaisePropertyChanged("DistanceCombatKm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DistanceKm {
            get {
                return this.DistanceKmField;
            }
            set {
                if ((this.DistanceKmField.Equals(value) != true)) {
                    this.DistanceKmField = value;
                    this.RaisePropertyChanged("DistanceKm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ELO {
            get {
                return this.ELOField;
            }
            set {
                if ((this.ELOField.Equals(value) != true)) {
                    this.ELOField = value;
                    this.RaisePropertyChanged("ELO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ELOBeta {
            get {
                return this.ELOBetaField;
            }
            set {
                if ((this.ELOBetaField.Equals(value) != true)) {
                    this.ELOBetaField = value;
                    this.RaisePropertyChanged("ELOBeta");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Grade {
            get {
                return this.GradeField;
            }
            set {
                if ((object.ReferenceEquals(this.GradeField, value) != true)) {
                    this.GradeField = value;
                    this.RaisePropertyChanged("Grade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal IncidentsPerKm {
            get {
                return this.IncidentsPerKmField;
            }
            set {
                if ((this.IncidentsPerKmField.Equals(value) != true)) {
                    this.IncidentsPerKmField = value;
                    this.RaisePropertyChanged("IncidentsPerKm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastGradeUpdate {
            get {
                return this.LastGradeUpdateField;
            }
            set {
                if ((this.LastGradeUpdateField.Equals(value) != true)) {
                    this.LastGradeUpdateField = value;
                    this.RaisePropertyChanged("LastGradeUpdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MassAccidents {
            get {
                return this.MassAccidentsField;
            }
            set {
                if ((this.MassAccidentsField.Equals(value) != true)) {
                    this.MassAccidentsField = value;
                    this.RaisePropertyChanged("MassAccidents");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SessionsDriven {
            get {
                return this.SessionsDrivenField;
            }
            set {
                if ((this.SessionsDrivenField.Equals(value) != true)) {
                    this.SessionsDrivenField = value;
                    this.RaisePropertyChanged("SessionsDriven");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SteamHash {
            get {
                return this.SteamHashField;
            }
            set {
                if ((object.ReferenceEquals(this.SteamHashField, value) != true)) {
                    this.SteamHashField = value;
                    this.RaisePropertyChanged("SteamHash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SteamId {
            get {
                return this.SteamIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SteamIdField, value) != true)) {
                    this.SteamIdField = value;
                    this.RaisePropertyChanged("SteamId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Consistency", Namespace="http://schemas.datacontract.org/2004/07/MinoRating.Entities.Domain")]
    [System.SerializableAttribute()]
    public partial class Consistency : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AvgConsistencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MinoRatingPlugin.minoRatingServer.Driver DriverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LapsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MaxConsistencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MinConsistencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MinutesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] RawDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TrackField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AvgConsistency {
            get {
                return this.AvgConsistencyField;
            }
            set {
                if ((this.AvgConsistencyField.Equals(value) != true)) {
                    this.AvgConsistencyField = value;
                    this.RaisePropertyChanged("AvgConsistency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Car {
            get {
                return this.CarField;
            }
            set {
                if ((object.ReferenceEquals(this.CarField, value) != true)) {
                    this.CarField = value;
                    this.RaisePropertyChanged("Car");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Created {
            get {
                return this.CreatedField;
            }
            set {
                if ((this.CreatedField.Equals(value) != true)) {
                    this.CreatedField = value;
                    this.RaisePropertyChanged("Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MinoRatingPlugin.minoRatingServer.Driver Driver {
            get {
                return this.DriverField;
            }
            set {
                if ((object.ReferenceEquals(this.DriverField, value) != true)) {
                    this.DriverField = value;
                    this.RaisePropertyChanged("Driver");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Laps {
            get {
                return this.LapsField;
            }
            set {
                if ((this.LapsField.Equals(value) != true)) {
                    this.LapsField = value;
                    this.RaisePropertyChanged("Laps");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MaxConsistency {
            get {
                return this.MaxConsistencyField;
            }
            set {
                if ((this.MaxConsistencyField.Equals(value) != true)) {
                    this.MaxConsistencyField = value;
                    this.RaisePropertyChanged("MaxConsistency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MinConsistency {
            get {
                return this.MinConsistencyField;
            }
            set {
                if ((this.MinConsistencyField.Equals(value) != true)) {
                    this.MinConsistencyField = value;
                    this.RaisePropertyChanged("MinConsistency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Minutes {
            get {
                return this.MinutesField;
            }
            set {
                if ((this.MinutesField.Equals(value) != true)) {
                    this.MinutesField = value;
                    this.RaisePropertyChanged("Minutes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] RawData {
            get {
                return this.RawDataField;
            }
            set {
                if ((object.ReferenceEquals(this.RawDataField, value) != true)) {
                    this.RawDataField = value;
                    this.RaisePropertyChanged("RawData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Score {
            get {
                return this.ScoreField;
            }
            set {
                if ((this.ScoreField.Equals(value) != true)) {
                    this.ScoreField = value;
                    this.RaisePropertyChanged("Score");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Track {
            get {
                return this.TrackField;
            }
            set {
                if ((object.ReferenceEquals(this.TrackField, value) != true)) {
                    this.TrackField = value;
                    this.RaisePropertyChanged("Track");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_Session", Namespace="http://schemas.datacontract.org/2004/07/MinoRating.Entities.Domain")]
    [System.SerializableAttribute()]
    public partial class T_Session : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CarListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ClosedAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MinoRatingPlugin.minoRatingServer.T_DriverSession[] CompleteDriverSessionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FinishedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastActivityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastLeaderboardEntryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MRBlockingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Version PluginVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MinoRatingPlugin.minoRatingServer.ReportingServer ServerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServerIpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServerTcpPortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SessionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MinoRatingPlugin.minoRatingServer.T_Slot[] SlotsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalRaceLapsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalSessionTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MinoRatingPlugin.minoRatingServer.T_Track TrackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WaittimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CarList {
            get {
                return this.CarListField;
            }
            set {
                if ((object.ReferenceEquals(this.CarListField, value) != true)) {
                    this.CarListField = value;
                    this.RaisePropertyChanged("CarList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ClosedAt {
            get {
                return this.ClosedAtField;
            }
            set {
                if ((this.ClosedAtField.Equals(value) != true)) {
                    this.ClosedAtField = value;
                    this.RaisePropertyChanged("ClosedAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MinoRatingPlugin.minoRatingServer.T_DriverSession[] CompleteDriverSessions {
            get {
                return this.CompleteDriverSessionsField;
            }
            set {
                if ((object.ReferenceEquals(this.CompleteDriverSessionsField, value) != true)) {
                    this.CompleteDriverSessionsField = value;
                    this.RaisePropertyChanged("CompleteDriverSessions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FinishedOn {
            get {
                return this.FinishedOnField;
            }
            set {
                if ((this.FinishedOnField.Equals(value) != true)) {
                    this.FinishedOnField = value;
                    this.RaisePropertyChanged("FinishedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastActivity {
            get {
                return this.LastActivityField;
            }
            set {
                if ((this.LastActivityField.Equals(value) != true)) {
                    this.LastActivityField = value;
                    this.RaisePropertyChanged("LastActivity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastLeaderboardEntry {
            get {
                return this.LastLeaderboardEntryField;
            }
            set {
                if ((object.ReferenceEquals(this.LastLeaderboardEntryField, value) != true)) {
                    this.LastLeaderboardEntryField = value;
                    this.RaisePropertyChanged("LastLeaderboardEntry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MRBlocking {
            get {
                return this.MRBlockingField;
            }
            set {
                if ((object.ReferenceEquals(this.MRBlockingField, value) != true)) {
                    this.MRBlockingField = value;
                    this.RaisePropertyChanged("MRBlocking");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Version PluginVersion {
            get {
                return this.PluginVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.PluginVersionField, value) != true)) {
                    this.PluginVersionField = value;
                    this.RaisePropertyChanged("PluginVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MinoRatingPlugin.minoRatingServer.ReportingServer Server {
            get {
                return this.ServerField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerField, value) != true)) {
                    this.ServerField = value;
                    this.RaisePropertyChanged("Server");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServerIp {
            get {
                return this.ServerIpField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerIpField, value) != true)) {
                    this.ServerIpField = value;
                    this.RaisePropertyChanged("ServerIp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServerName {
            get {
                return this.ServerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerNameField, value) != true)) {
                    this.ServerNameField = value;
                    this.RaisePropertyChanged("ServerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServerTcpPort {
            get {
                return this.ServerTcpPortField;
            }
            set {
                if ((this.ServerTcpPortField.Equals(value) != true)) {
                    this.ServerTcpPortField = value;
                    this.RaisePropertyChanged("ServerTcpPort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SessionId {
            get {
                return this.SessionIdField;
            }
            set {
                if ((this.SessionIdField.Equals(value) != true)) {
                    this.SessionIdField = value;
                    this.RaisePropertyChanged("SessionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MinoRatingPlugin.minoRatingServer.T_Slot[] Slots {
            get {
                return this.SlotsField;
            }
            set {
                if ((object.ReferenceEquals(this.SlotsField, value) != true)) {
                    this.SlotsField = value;
                    this.RaisePropertyChanged("Slots");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRaceLaps {
            get {
                return this.TotalRaceLapsField;
            }
            set {
                if ((this.TotalRaceLapsField.Equals(value) != true)) {
                    this.TotalRaceLapsField = value;
                    this.RaisePropertyChanged("TotalRaceLaps");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalSessionTime {
            get {
                return this.TotalSessionTimeField;
            }
            set {
                if ((this.TotalSessionTimeField.Equals(value) != true)) {
                    this.TotalSessionTimeField = value;
                    this.RaisePropertyChanged("TotalSessionTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MinoRatingPlugin.minoRatingServer.T_Track Track {
            get {
                return this.TrackField;
            }
            set {
                if ((object.ReferenceEquals(this.TrackField, value) != true)) {
                    this.TrackField = value;
                    this.RaisePropertyChanged("Track");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Waittime {
            get {
                return this.WaittimeField;
            }
            set {
                if ((this.WaittimeField.Equals(value) != true)) {
                    this.WaittimeField = value;
                    this.RaisePropertyChanged("Waittime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReportingServer", Namespace="http://schemas.datacontract.org/2004/07/MinoRating.Entities.Domain")]
    [System.SerializableAttribute()]
    public partial class ReportingServer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FingerprintField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long KmReportedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LapsReportedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastActivityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastAliveSignalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LastDriverCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastUsedServernameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Version PluginVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RatingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServernameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SessionsReportedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpecialServerRoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TokenField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Created {
            get {
                return this.CreatedField;
            }
            set {
                if ((this.CreatedField.Equals(value) != true)) {
                    this.CreatedField = value;
                    this.RaisePropertyChanged("Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fingerprint {
            get {
                return this.FingerprintField;
            }
            set {
                if ((object.ReferenceEquals(this.FingerprintField, value) != true)) {
                    this.FingerprintField = value;
                    this.RaisePropertyChanged("Fingerprint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IP {
            get {
                return this.IPField;
            }
            set {
                if ((object.ReferenceEquals(this.IPField, value) != true)) {
                    this.IPField = value;
                    this.RaisePropertyChanged("IP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long KmReported {
            get {
                return this.KmReportedField;
            }
            set {
                if ((this.KmReportedField.Equals(value) != true)) {
                    this.KmReportedField = value;
                    this.RaisePropertyChanged("KmReported");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LapsReported {
            get {
                return this.LapsReportedField;
            }
            set {
                if ((this.LapsReportedField.Equals(value) != true)) {
                    this.LapsReportedField = value;
                    this.RaisePropertyChanged("LapsReported");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastActivity {
            get {
                return this.LastActivityField;
            }
            set {
                if ((this.LastActivityField.Equals(value) != true)) {
                    this.LastActivityField = value;
                    this.RaisePropertyChanged("LastActivity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastAliveSignal {
            get {
                return this.LastAliveSignalField;
            }
            set {
                if ((this.LastAliveSignalField.Equals(value) != true)) {
                    this.LastAliveSignalField = value;
                    this.RaisePropertyChanged("LastAliveSignal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LastDriverCount {
            get {
                return this.LastDriverCountField;
            }
            set {
                if ((this.LastDriverCountField.Equals(value) != true)) {
                    this.LastDriverCountField = value;
                    this.RaisePropertyChanged("LastDriverCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastUsedServername {
            get {
                return this.LastUsedServernameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastUsedServernameField, value) != true)) {
                    this.LastUsedServernameField = value;
                    this.RaisePropertyChanged("LastUsedServername");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Version PluginVersion {
            get {
                return this.PluginVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.PluginVersionField, value) != true)) {
                    this.PluginVersionField = value;
                    this.RaisePropertyChanged("PluginVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rating {
            get {
                return this.RatingField;
            }
            set {
                if ((this.RatingField.Equals(value) != true)) {
                    this.RatingField = value;
                    this.RaisePropertyChanged("Rating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Servername {
            get {
                return this.ServernameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServernameField, value) != true)) {
                    this.ServernameField = value;
                    this.RaisePropertyChanged("Servername");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SessionsReported {
            get {
                return this.SessionsReportedField;
            }
            set {
                if ((this.SessionsReportedField.Equals(value) != true)) {
                    this.SessionsReportedField = value;
                    this.RaisePropertyChanged("SessionsReported");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpecialServerRole {
            get {
                return this.SpecialServerRoleField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecialServerRoleField, value) != true)) {
                    this.SpecialServerRoleField = value;
                    this.RaisePropertyChanged("SpecialServerRole");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token {
            get {
                return this.TokenField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenField, value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_Track", Namespace="http://schemas.datacontract.org/2004/07/MinoRating.Entities.Domain")]
    [System.SerializableAttribute()]
    public partial class T_Track : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float LengthInMetersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PitAreaRectangleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PitExitRectangleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SplitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MinoRatingPlugin.minoRatingServer.T_Track.TrackStatus StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TrackIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float LengthInMeters {
            get {
                return this.LengthInMetersField;
            }
            set {
                if ((this.LengthInMetersField.Equals(value) != true)) {
                    this.LengthInMetersField = value;
                    this.RaisePropertyChanged("LengthInMeters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PitAreaRectangle {
            get {
                return this.PitAreaRectangleField;
            }
            set {
                if ((object.ReferenceEquals(this.PitAreaRectangleField, value) != true)) {
                    this.PitAreaRectangleField = value;
                    this.RaisePropertyChanged("PitAreaRectangle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PitExitRectangle {
            get {
                return this.PitExitRectangleField;
            }
            set {
                if ((object.ReferenceEquals(this.PitExitRectangleField, value) != true)) {
                    this.PitExitRectangleField = value;
                    this.RaisePropertyChanged("PitExitRectangle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Splits {
            get {
                return this.SplitsField;
            }
            set {
                if ((object.ReferenceEquals(this.SplitsField, value) != true)) {
                    this.SplitsField = value;
                    this.RaisePropertyChanged("Splits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MinoRatingPlugin.minoRatingServer.T_Track.TrackStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TrackId {
            get {
                return this.TrackIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TrackIdField, value) != true)) {
                    this.TrackIdField = value;
                    this.RaisePropertyChanged("TrackId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="T_Track.TrackStatus", Namespace="http://schemas.datacontract.org/2004/07/MinoRating.Entities.Domain")]
        public enum TrackStatus : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Unknown = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            BasicDescription = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            DetailedDescription = 2,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            ReferenceLap = 3,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Splits = 4,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Complete = 5,
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_DriverSession", Namespace="http://schemas.datacontract.org/2004/07/MinoRating.Entities.Domain")]
    [System.SerializableAttribute()]
    public partial class T_DriverSession : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_Slot", Namespace="http://schemas.datacontract.org/2004/07/MinoRating.Entities.Domain")]
    [System.SerializableAttribute()]
    public partial class T_Slot : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MinoRatingPlugin.minoRatingServer.T_Car CarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MinoRatingPlugin.minoRatingServer.Driver DriverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MinoRatingPlugin.minoRatingServer.T_Session SessionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte SlotNoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MinoRatingPlugin.minoRatingServer.T_Car Car {
            get {
                return this.CarField;
            }
            set {
                if ((object.ReferenceEquals(this.CarField, value) != true)) {
                    this.CarField = value;
                    this.RaisePropertyChanged("Car");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MinoRatingPlugin.minoRatingServer.Driver Driver {
            get {
                return this.DriverField;
            }
            set {
                if ((object.ReferenceEquals(this.DriverField, value) != true)) {
                    this.DriverField = value;
                    this.RaisePropertyChanged("Driver");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MinoRatingPlugin.minoRatingServer.T_Session Session {
            get {
                return this.SessionField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionField, value) != true)) {
                    this.SessionField = value;
                    this.RaisePropertyChanged("Session");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte SlotNo {
            get {
                return this.SlotNoField;
            }
            set {
                if ((this.SlotNoField.Equals(value) != true)) {
                    this.SlotNoField = value;
                    this.RaisePropertyChanged("SlotNo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_Car", Namespace="http://schemas.datacontract.org/2004/07/MinoRating.Entities.Domain")]
    [System.SerializableAttribute()]
    public partial class T_Car : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MinoRatingPlugin.minoRatingServer.T_Car.CarStatus StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Model {
            get {
                return this.ModelField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelField, value) != true)) {
                    this.ModelField = value;
                    this.RaisePropertyChanged("Model");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MinoRatingPlugin.minoRatingServer.T_Car.CarStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="T_Car.CarStatus", Namespace="http://schemas.datacontract.org/2004/07/MinoRating.Entities.Domain")]
        public enum CarStatus : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Unknown = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            ClassSet = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Details = 2,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Complete = 3,
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="minoRatingServer.ILiveDataDump")]
    public interface ILiveDataDump {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILiveDataDump/Alive", ReplyAction="http://tempuri.org/ILiveDataDump/AliveResponse")]
        MinoRatingPlugin.minoRatingServer.PluginReaction[] Alive(System.Guid sessionId, System.DateTime created, string driversHash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILiveDataDump/Alive", ReplyAction="http://tempuri.org/ILiveDataDump/AliveResponse")]
        System.Threading.Tasks.Task<MinoRatingPlugin.minoRatingServer.PluginReaction[]> AliveAsync(System.Guid sessionId, System.DateTime created, string driversHash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILiveDataDump/NewSession", ReplyAction="http://tempuri.org/ILiveDataDump/NewSessionResponse")]
        System.Guid NewSession(
                    System.Guid lastId, 
                    string servername, 
                    string track, 
                    int sessionType, 
                    int laps, 
                    int waittime, 
                    int sessionDurationMinutes, 
                    int ambient, 
                    int road, 
                    int elapsedMs, 
                    string token, 
                    byte[] fingerprint, 
                    System.Version pluginVersion, 
                    int sessionCollisionsToKick, 
                    int sessionMassAccidentsToKick, 
                    int serverKickMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILiveDataDump/NewSession", ReplyAction="http://tempuri.org/ILiveDataDump/NewSessionResponse")]
        System.Threading.Tasks.Task<System.Guid> NewSessionAsync(
                    System.Guid lastId, 
                    string servername, 
                    string track, 
                    int sessionType, 
                    int laps, 
                    int waittime, 
                    int sessionDurationMinutes, 
                    int ambient, 
                    int road, 
                    int elapsedMs, 
                    string token, 
                    byte[] fingerprint, 
                    System.Version pluginVersion, 
                    int sessionCollisionsToKick, 
                    int sessionMassAccidentsToKick, 
                    int serverKickMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILiveDataDump/GetTrackDefinition", ReplyAction="http://tempuri.org/ILiveDataDump/GetTrackDefinitionResponse")]
        MinoRatingPlugin.minoRatingServer.TrackDefinition GetTrackDefinition(System.Guid lastId, System.DateTime created);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILiveDataDump/GetTrackDefinition", ReplyAction="http://tempuri.org/ILiveDataDump/GetTrackDefinitionResponse")]
        System.Threading.Tasks.Task<MinoRatingPlugin.minoRatingServer.TrackDefinition> GetTrackDefinitionAsync(System.Guid lastId, System.DateTime created);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILiveDataDump/EndSession", ReplyAction="http://tempuri.org/ILiveDataDump/EndSessionResponse")]
        MinoRatingPlugin.minoRatingServer.PluginReaction[] EndSession(System.Guid lastId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILiveDataDump/EndSession", ReplyAction="http://tempuri.org/ILiveDataDump/EndSessionResponse")]
        System.Threading.Tasks.Task<MinoRatingPlugin.minoRatingServer.PluginReaction[]> EndSessionAsync(System.Guid lastId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILiveDataDump/LapCompleted", ReplyAction="http://tempuri.org/ILiveDataDump/LapCompletedResponse")]
        MinoRatingPlugin.minoRatingServer.PluginReaction[] LapCompleted(System.Guid sessionId, System.DateTime created, int car, string driver, uint laptime, int cuts, float grip, MinoRatingPlugin.minoRatingServer.LeaderboardEntry[] leaderboard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILiveDataDump/LapCompleted", ReplyAction="http://tempuri.org/ILiveDataDump/LapCompletedResponse")]
        System.Threading.Tasks.Task<MinoRatingPlugin.minoRatingServer.PluginReaction[]> LapCompletedAsync(System.Guid sessionId, System.DateTime created, int car, string driver, uint laptime, int cuts, float grip, MinoRatingPlugin.minoRatingServer.LeaderboardEntry[] leaderboard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILiveDataDump/LapCompletedConsistencySplits", ReplyAction="http://tempuri.org/ILiveDataDump/LapCompletedConsistencySplitsResponse")]
        MinoRatingPlugin.minoRatingServer.PluginReaction[] LapCompletedConsistencySplits(System.Guid sessionId, System.DateTime created, int car, MinoRatingPlugin.minoRatingServer.ConsistencyReport consistencyReport);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILiveDataDump/LapCompletedConsistencySplits", ReplyAction="http://tempuri.org/ILiveDataDump/LapCompletedConsistencySplitsResponse")]
        System.Threading.Tasks.Task<MinoRatingPlugin.minoRatingServer.PluginReaction[]> LapCompletedConsistencySplitsAsync(System.Guid sessionId, System.DateTime created, int car, MinoRatingPlugin.minoRatingServer.ConsistencyReport consistencyReport);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILiveDataDump/DistanceDriven", ReplyAction="http://tempuri.org/ILiveDataDump/DistanceDrivenResponse")]
        MinoRatingPlugin.minoRatingServer.PluginReaction[] DistanceDriven(System.Guid sessionId, int car, [System.ServiceModel.MessageParameterAttribute(Name="distanceDriven")] MinoRatingPlugin.minoRatingServer.MRDistanceHelper distanceDriven1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILiveDataDump/DistanceDriven", ReplyAction="http://tempuri.org/ILiveDataDump/DistanceDrivenResponse")]
        System.Threading.Tasks.Task<MinoRatingPlugin.minoRatingServer.PluginReaction[]> DistanceDrivenAsync(System.Guid sessionId, int car, MinoRatingPlugin.minoRatingServer.MRDistanceHelper distanceDriven);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILiveDataDump/Collision", ReplyAction="http://tempuri.org/ILiveDataDump/CollisionResponse")]
        MinoRatingPlugin.minoRatingServer.PluginReaction[] Collision(System.Guid sessionId, System.DateTime created, int car, int otherCar, float speed, float splinepos, float relativeX, float relativeZ, float x, float z, MinoRatingPlugin.minoRatingServer.CarUpdateHistory[] historyCar, MinoRatingPlugin.minoRatingServer.CarUpdateHistory[] historyOtherCar, int bagId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILiveDataDump/Collision", ReplyAction="http://tempuri.org/ILiveDataDump/CollisionResponse")]
        System.Threading.Tasks.Task<MinoRatingPlugin.minoRatingServer.PluginReaction[]> CollisionAsync(System.Guid sessionId, System.DateTime created, int car, int otherCar, float speed, float splinepos, float relativeX, float relativeZ, float x, float z, MinoRatingPlugin.minoRatingServer.CarUpdateHistory[] historyCar, MinoRatingPlugin.minoRatingServer.CarUpdateHistory[] historyOtherCar, int bagId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILiveDataDump/CollisionV2", ReplyAction="http://tempuri.org/ILiveDataDump/CollisionV2Response")]
        MinoRatingPlugin.minoRatingServer.PluginReactionCollection CollisionV2(System.Guid sessionId, System.DateTime created, int car, int otherCar, float speed, float splinepos, float relativeX, float relativeZ, float x, float z, MinoRatingPlugin.minoRatingServer.CarUpdateHistory[] historyCar, MinoRatingPlugin.minoRatingServer.CarUpdateHistory[] historyOtherCar, int bagId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILiveDataDump/CollisionV2", ReplyAction="http://tempuri.org/ILiveDataDump/CollisionV2Response")]
        System.Threading.Tasks.Task<MinoRatingPlugin.minoRatingServer.PluginReactionCollection> CollisionV2Async(System.Guid sessionId, System.DateTime created, int car, int otherCar, float speed, float splinepos, float relativeX, float relativeZ, float x, float z, MinoRatingPlugin.minoRatingServer.CarUpdateHistory[] historyCar, MinoRatingPlugin.minoRatingServer.CarUpdateHistory[] historyOtherCar, int bagId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILiveDataDump/CollisionTreeEnded", ReplyAction="http://tempuri.org/ILiveDataDump/CollisionTreeEndedResponse")]
        MinoRatingPlugin.minoRatingServer.PluginReaction[] CollisionTreeEnded(System.Guid sessionId, int car, int otherCar, int count, System.DateTime started, System.DateTime ended);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILiveDataDump/CollisionTreeEnded", ReplyAction="http://tempuri.org/ILiveDataDump/CollisionTreeEndedResponse")]
        System.Threading.Tasks.Task<MinoRatingPlugin.minoRatingServer.PluginReaction[]> CollisionTreeEndedAsync(System.Guid sessionId, int car, int otherCar, int count, System.DateTime started, System.DateTime ended);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILiveDataDump/CollisionTreeEndedV2", ReplyAction="http://tempuri.org/ILiveDataDump/CollisionTreeEndedV2Response")]
        MinoRatingPlugin.minoRatingServer.PluginReactionCollection CollisionTreeEndedV2(System.Guid sessionId, int car, int otherCar, int count, System.DateTime started, System.DateTime ended);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILiveDataDump/CollisionTreeEndedV2", ReplyAction="http://tempuri.org/ILiveDataDump/CollisionTreeEndedV2Response")]
        System.Threading.Tasks.Task<MinoRatingPlugin.minoRatingServer.PluginReactionCollection> CollisionTreeEndedV2Async(System.Guid sessionId, int car, int otherCar, int count, System.DateTime started, System.DateTime ended);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILiveDataDump/RandomCarInfo", ReplyAction="http://tempuri.org/ILiveDataDump/RandomCarInfoResponse")]
        MinoRatingPlugin.minoRatingServer.PluginReaction[] RandomCarInfo(System.Guid sessionId, int carId, string car, string name, string driverId, bool isConnected, int sessionTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILiveDataDump/RandomCarInfo", ReplyAction="http://tempuri.org/ILiveDataDump/RandomCarInfoResponse")]
        System.Threading.Tasks.Task<MinoRatingPlugin.minoRatingServer.PluginReaction[]> RandomCarInfoAsync(System.Guid sessionId, int carId, string car, string name, string driverId, bool isConnected, int sessionTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILiveDataDump/GetVersion", ReplyAction="http://tempuri.org/ILiveDataDump/GetVersionResponse")]
        System.Version GetVersion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILiveDataDump/GetVersion", ReplyAction="http://tempuri.org/ILiveDataDump/GetVersionResponse")]
        System.Threading.Tasks.Task<System.Version> GetVersionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILiveDataDump/RequestDriverRating", ReplyAction="http://tempuri.org/ILiveDataDump/RequestDriverRatingResponse")]
        MinoRatingPlugin.minoRatingServer.PluginReaction[] RequestDriverRating(System.Guid sessionId, int car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILiveDataDump/RequestDriverRating", ReplyAction="http://tempuri.org/ILiveDataDump/RequestDriverRatingResponse")]
        System.Threading.Tasks.Task<MinoRatingPlugin.minoRatingServer.PluginReaction[]> RequestDriverRatingAsync(System.Guid sessionId, int car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILiveDataDump/RequestMRCommand", ReplyAction="http://tempuri.org/ILiveDataDump/RequestMRCommandResponse")]
        MinoRatingPlugin.minoRatingServer.PluginReaction[] RequestMRCommand(System.Guid sessionId, int car, string[] parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILiveDataDump/RequestMRCommand", ReplyAction="http://tempuri.org/ILiveDataDump/RequestMRCommandResponse")]
        System.Threading.Tasks.Task<MinoRatingPlugin.minoRatingServer.PluginReaction[]> RequestMRCommandAsync(System.Guid sessionId, int car, string[] parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILiveDataDump/RequestMRCommandAdminInfo", ReplyAction="http://tempuri.org/ILiveDataDump/RequestMRCommandAdminInfoResponse")]
        MinoRatingPlugin.minoRatingServer.PluginReaction[] RequestMRCommandAdminInfo(System.Guid sessionId, int car, bool isAdmin, string[] parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILiveDataDump/RequestMRCommandAdminInfo", ReplyAction="http://tempuri.org/ILiveDataDump/RequestMRCommandAdminInfoResponse")]
        System.Threading.Tasks.Task<MinoRatingPlugin.minoRatingServer.PluginReaction[]> RequestMRCommandAdminInfoAsync(System.Guid sessionId, int car, bool isAdmin, string[] parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILiveDataDump/RequestDriverLoaded", ReplyAction="http://tempuri.org/ILiveDataDump/RequestDriverLoadedResponse")]
        MinoRatingPlugin.minoRatingServer.PluginReaction[] RequestDriverLoaded(System.Guid sessionId, int car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILiveDataDump/RequestDriverLoaded", ReplyAction="http://tempuri.org/ILiveDataDump/RequestDriverLoadedResponse")]
        System.Threading.Tasks.Task<MinoRatingPlugin.minoRatingServer.PluginReaction[]> RequestDriverLoadedAsync(System.Guid sessionId, int car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILiveDataDump/GetPendingActions", ReplyAction="http://tempuri.org/ILiveDataDump/GetPendingActionsResponse")]
        MinoRatingPlugin.minoRatingServer.PluginReaction[] GetPendingActions(System.Guid sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILiveDataDump/GetPendingActions", ReplyAction="http://tempuri.org/ILiveDataDump/GetPendingActionsResponse")]
        System.Threading.Tasks.Task<MinoRatingPlugin.minoRatingServer.PluginReaction[]> GetPendingActionsAsync(System.Guid sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILiveDataDump/GetSituation", ReplyAction="http://tempuri.org/ILiveDataDump/GetSituationResponse")]
        MinoRatingPlugin.minoRatingServer.Situation GetSituation(string token, long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILiveDataDump/GetSituation", ReplyAction="http://tempuri.org/ILiveDataDump/GetSituationResponse")]
        System.Threading.Tasks.Task<MinoRatingPlugin.minoRatingServer.Situation> GetSituationAsync(string token, long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILiveDataDump/DriverBackToPits", ReplyAction="http://tempuri.org/ILiveDataDump/DriverBackToPitsResponse")]
        MinoRatingPlugin.minoRatingServer.PluginReaction[] DriverBackToPits(System.Guid sessionId, System.DateTime created, int carId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILiveDataDump/DriverBackToPits", ReplyAction="http://tempuri.org/ILiveDataDump/DriverBackToPitsResponse")]
        System.Threading.Tasks.Task<MinoRatingPlugin.minoRatingServer.PluginReaction[]> DriverBackToPitsAsync(System.Guid sessionId, System.DateTime created, int carId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILiveDataDump/GetAuthData", ReplyAction="http://tempuri.org/ILiveDataDump/GetAuthDataResponse")]
        System.Collections.Generic.Dictionary<string, string> GetAuthData(string token, System.DateTime currentPluginTime, System.DateTime lastPluginUpdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILiveDataDump/GetAuthData", ReplyAction="http://tempuri.org/ILiveDataDump/GetAuthDataResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetAuthDataAsync(string token, System.DateTime currentPluginTime, System.DateTime lastPluginUpdate);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILiveDataDumpChannel : MinoRatingPlugin.minoRatingServer.ILiveDataDump, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LiveDataDumpClient : System.ServiceModel.ClientBase<MinoRatingPlugin.minoRatingServer.ILiveDataDump>, MinoRatingPlugin.minoRatingServer.ILiveDataDump {
        
        public LiveDataDumpClient() {
        }
        
        public LiveDataDumpClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LiveDataDumpClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LiveDataDumpClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LiveDataDumpClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MinoRatingPlugin.minoRatingServer.PluginReaction[] Alive(System.Guid sessionId, System.DateTime created, string driversHash) {
            return base.Channel.Alive(sessionId, created, driversHash);
        }
        
        public System.Threading.Tasks.Task<MinoRatingPlugin.minoRatingServer.PluginReaction[]> AliveAsync(System.Guid sessionId, System.DateTime created, string driversHash) {
            return base.Channel.AliveAsync(sessionId, created, driversHash);
        }
        
        public System.Guid NewSession(
                    System.Guid lastId, 
                    string servername, 
                    string track, 
                    int sessionType, 
                    int laps, 
                    int waittime, 
                    int sessionDurationMinutes, 
                    int ambient, 
                    int road, 
                    int elapsedMs, 
                    string token, 
                    byte[] fingerprint, 
                    System.Version pluginVersion, 
                    int sessionCollisionsToKick, 
                    int sessionMassAccidentsToKick, 
                    int serverKickMode) {
            return base.Channel.NewSession(lastId, servername, track, sessionType, laps, waittime, sessionDurationMinutes, ambient, road, elapsedMs, token, fingerprint, pluginVersion, sessionCollisionsToKick, sessionMassAccidentsToKick, serverKickMode);
        }
        
        public System.Threading.Tasks.Task<System.Guid> NewSessionAsync(
                    System.Guid lastId, 
                    string servername, 
                    string track, 
                    int sessionType, 
                    int laps, 
                    int waittime, 
                    int sessionDurationMinutes, 
                    int ambient, 
                    int road, 
                    int elapsedMs, 
                    string token, 
                    byte[] fingerprint, 
                    System.Version pluginVersion, 
                    int sessionCollisionsToKick, 
                    int sessionMassAccidentsToKick, 
                    int serverKickMode) {
            return base.Channel.NewSessionAsync(lastId, servername, track, sessionType, laps, waittime, sessionDurationMinutes, ambient, road, elapsedMs, token, fingerprint, pluginVersion, sessionCollisionsToKick, sessionMassAccidentsToKick, serverKickMode);
        }
        
        public MinoRatingPlugin.minoRatingServer.TrackDefinition GetTrackDefinition(System.Guid lastId, System.DateTime created) {
            return base.Channel.GetTrackDefinition(lastId, created);
        }
        
        public System.Threading.Tasks.Task<MinoRatingPlugin.minoRatingServer.TrackDefinition> GetTrackDefinitionAsync(System.Guid lastId, System.DateTime created) {
            return base.Channel.GetTrackDefinitionAsync(lastId, created);
        }
        
        public MinoRatingPlugin.minoRatingServer.PluginReaction[] EndSession(System.Guid lastId) {
            return base.Channel.EndSession(lastId);
        }
        
        public System.Threading.Tasks.Task<MinoRatingPlugin.minoRatingServer.PluginReaction[]> EndSessionAsync(System.Guid lastId) {
            return base.Channel.EndSessionAsync(lastId);
        }
        
        public MinoRatingPlugin.minoRatingServer.PluginReaction[] LapCompleted(System.Guid sessionId, System.DateTime created, int car, string driver, uint laptime, int cuts, float grip, MinoRatingPlugin.minoRatingServer.LeaderboardEntry[] leaderboard) {
            return base.Channel.LapCompleted(sessionId, created, car, driver, laptime, cuts, grip, leaderboard);
        }
        
        public System.Threading.Tasks.Task<MinoRatingPlugin.minoRatingServer.PluginReaction[]> LapCompletedAsync(System.Guid sessionId, System.DateTime created, int car, string driver, uint laptime, int cuts, float grip, MinoRatingPlugin.minoRatingServer.LeaderboardEntry[] leaderboard) {
            return base.Channel.LapCompletedAsync(sessionId, created, car, driver, laptime, cuts, grip, leaderboard);
        }
        
        public MinoRatingPlugin.minoRatingServer.PluginReaction[] LapCompletedConsistencySplits(System.Guid sessionId, System.DateTime created, int car, MinoRatingPlugin.minoRatingServer.ConsistencyReport consistencyReport) {
            return base.Channel.LapCompletedConsistencySplits(sessionId, created, car, consistencyReport);
        }
        
        public System.Threading.Tasks.Task<MinoRatingPlugin.minoRatingServer.PluginReaction[]> LapCompletedConsistencySplitsAsync(System.Guid sessionId, System.DateTime created, int car, MinoRatingPlugin.minoRatingServer.ConsistencyReport consistencyReport) {
            return base.Channel.LapCompletedConsistencySplitsAsync(sessionId, created, car, consistencyReport);
        }
        
        public MinoRatingPlugin.minoRatingServer.PluginReaction[] DistanceDriven(System.Guid sessionId, int car, MinoRatingPlugin.minoRatingServer.MRDistanceHelper distanceDriven1) {
            return base.Channel.DistanceDriven(sessionId, car, distanceDriven1);
        }
        
        public System.Threading.Tasks.Task<MinoRatingPlugin.minoRatingServer.PluginReaction[]> DistanceDrivenAsync(System.Guid sessionId, int car, MinoRatingPlugin.minoRatingServer.MRDistanceHelper distanceDriven) {
            return base.Channel.DistanceDrivenAsync(sessionId, car, distanceDriven);
        }
        
        public MinoRatingPlugin.minoRatingServer.PluginReaction[] Collision(System.Guid sessionId, System.DateTime created, int car, int otherCar, float speed, float splinepos, float relativeX, float relativeZ, float x, float z, MinoRatingPlugin.minoRatingServer.CarUpdateHistory[] historyCar, MinoRatingPlugin.minoRatingServer.CarUpdateHistory[] historyOtherCar, int bagId) {
            return base.Channel.Collision(sessionId, created, car, otherCar, speed, splinepos, relativeX, relativeZ, x, z, historyCar, historyOtherCar, bagId);
        }
        
        public System.Threading.Tasks.Task<MinoRatingPlugin.minoRatingServer.PluginReaction[]> CollisionAsync(System.Guid sessionId, System.DateTime created, int car, int otherCar, float speed, float splinepos, float relativeX, float relativeZ, float x, float z, MinoRatingPlugin.minoRatingServer.CarUpdateHistory[] historyCar, MinoRatingPlugin.minoRatingServer.CarUpdateHistory[] historyOtherCar, int bagId) {
            return base.Channel.CollisionAsync(sessionId, created, car, otherCar, speed, splinepos, relativeX, relativeZ, x, z, historyCar, historyOtherCar, bagId);
        }
        
        public MinoRatingPlugin.minoRatingServer.PluginReactionCollection CollisionV2(System.Guid sessionId, System.DateTime created, int car, int otherCar, float speed, float splinepos, float relativeX, float relativeZ, float x, float z, MinoRatingPlugin.minoRatingServer.CarUpdateHistory[] historyCar, MinoRatingPlugin.minoRatingServer.CarUpdateHistory[] historyOtherCar, int bagId) {
            return base.Channel.CollisionV2(sessionId, created, car, otherCar, speed, splinepos, relativeX, relativeZ, x, z, historyCar, historyOtherCar, bagId);
        }
        
        public System.Threading.Tasks.Task<MinoRatingPlugin.minoRatingServer.PluginReactionCollection> CollisionV2Async(System.Guid sessionId, System.DateTime created, int car, int otherCar, float speed, float splinepos, float relativeX, float relativeZ, float x, float z, MinoRatingPlugin.minoRatingServer.CarUpdateHistory[] historyCar, MinoRatingPlugin.minoRatingServer.CarUpdateHistory[] historyOtherCar, int bagId) {
            return base.Channel.CollisionV2Async(sessionId, created, car, otherCar, speed, splinepos, relativeX, relativeZ, x, z, historyCar, historyOtherCar, bagId);
        }
        
        public MinoRatingPlugin.minoRatingServer.PluginReaction[] CollisionTreeEnded(System.Guid sessionId, int car, int otherCar, int count, System.DateTime started, System.DateTime ended) {
            return base.Channel.CollisionTreeEnded(sessionId, car, otherCar, count, started, ended);
        }
        
        public System.Threading.Tasks.Task<MinoRatingPlugin.minoRatingServer.PluginReaction[]> CollisionTreeEndedAsync(System.Guid sessionId, int car, int otherCar, int count, System.DateTime started, System.DateTime ended) {
            return base.Channel.CollisionTreeEndedAsync(sessionId, car, otherCar, count, started, ended);
        }
        
        public MinoRatingPlugin.minoRatingServer.PluginReactionCollection CollisionTreeEndedV2(System.Guid sessionId, int car, int otherCar, int count, System.DateTime started, System.DateTime ended) {
            return base.Channel.CollisionTreeEndedV2(sessionId, car, otherCar, count, started, ended);
        }
        
        public System.Threading.Tasks.Task<MinoRatingPlugin.minoRatingServer.PluginReactionCollection> CollisionTreeEndedV2Async(System.Guid sessionId, int car, int otherCar, int count, System.DateTime started, System.DateTime ended) {
            return base.Channel.CollisionTreeEndedV2Async(sessionId, car, otherCar, count, started, ended);
        }
        
        public MinoRatingPlugin.minoRatingServer.PluginReaction[] RandomCarInfo(System.Guid sessionId, int carId, string car, string name, string driverId, bool isConnected, int sessionTime) {
            return base.Channel.RandomCarInfo(sessionId, carId, car, name, driverId, isConnected, sessionTime);
        }
        
        public System.Threading.Tasks.Task<MinoRatingPlugin.minoRatingServer.PluginReaction[]> RandomCarInfoAsync(System.Guid sessionId, int carId, string car, string name, string driverId, bool isConnected, int sessionTime) {
            return base.Channel.RandomCarInfoAsync(sessionId, carId, car, name, driverId, isConnected, sessionTime);
        }
        
        public System.Version GetVersion() {
            return base.Channel.GetVersion();
        }
        
        public System.Threading.Tasks.Task<System.Version> GetVersionAsync() {
            return base.Channel.GetVersionAsync();
        }
        
        public MinoRatingPlugin.minoRatingServer.PluginReaction[] RequestDriverRating(System.Guid sessionId, int car) {
            return base.Channel.RequestDriverRating(sessionId, car);
        }
        
        public System.Threading.Tasks.Task<MinoRatingPlugin.minoRatingServer.PluginReaction[]> RequestDriverRatingAsync(System.Guid sessionId, int car) {
            return base.Channel.RequestDriverRatingAsync(sessionId, car);
        }
        
        public MinoRatingPlugin.minoRatingServer.PluginReaction[] RequestMRCommand(System.Guid sessionId, int car, string[] parameters) {
            return base.Channel.RequestMRCommand(sessionId, car, parameters);
        }
        
        public System.Threading.Tasks.Task<MinoRatingPlugin.minoRatingServer.PluginReaction[]> RequestMRCommandAsync(System.Guid sessionId, int car, string[] parameters) {
            return base.Channel.RequestMRCommandAsync(sessionId, car, parameters);
        }
        
        public MinoRatingPlugin.minoRatingServer.PluginReaction[] RequestMRCommandAdminInfo(System.Guid sessionId, int car, bool isAdmin, string[] parameters) {
            return base.Channel.RequestMRCommandAdminInfo(sessionId, car, isAdmin, parameters);
        }
        
        public System.Threading.Tasks.Task<MinoRatingPlugin.minoRatingServer.PluginReaction[]> RequestMRCommandAdminInfoAsync(System.Guid sessionId, int car, bool isAdmin, string[] parameters) {
            return base.Channel.RequestMRCommandAdminInfoAsync(sessionId, car, isAdmin, parameters);
        }
        
        public MinoRatingPlugin.minoRatingServer.PluginReaction[] RequestDriverLoaded(System.Guid sessionId, int car) {
            return base.Channel.RequestDriverLoaded(sessionId, car);
        }
        
        public System.Threading.Tasks.Task<MinoRatingPlugin.minoRatingServer.PluginReaction[]> RequestDriverLoadedAsync(System.Guid sessionId, int car) {
            return base.Channel.RequestDriverLoadedAsync(sessionId, car);
        }
        
        public MinoRatingPlugin.minoRatingServer.PluginReaction[] GetPendingActions(System.Guid sessionId) {
            return base.Channel.GetPendingActions(sessionId);
        }
        
        public System.Threading.Tasks.Task<MinoRatingPlugin.minoRatingServer.PluginReaction[]> GetPendingActionsAsync(System.Guid sessionId) {
            return base.Channel.GetPendingActionsAsync(sessionId);
        }
        
        public MinoRatingPlugin.minoRatingServer.Situation GetSituation(string token, long id) {
            return base.Channel.GetSituation(token, id);
        }
        
        public System.Threading.Tasks.Task<MinoRatingPlugin.minoRatingServer.Situation> GetSituationAsync(string token, long id) {
            return base.Channel.GetSituationAsync(token, id);
        }
        
        public MinoRatingPlugin.minoRatingServer.PluginReaction[] DriverBackToPits(System.Guid sessionId, System.DateTime created, int carId) {
            return base.Channel.DriverBackToPits(sessionId, created, carId);
        }
        
        public System.Threading.Tasks.Task<MinoRatingPlugin.minoRatingServer.PluginReaction[]> DriverBackToPitsAsync(System.Guid sessionId, System.DateTime created, int carId) {
            return base.Channel.DriverBackToPitsAsync(sessionId, created, carId);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetAuthData(string token, System.DateTime currentPluginTime, System.DateTime lastPluginUpdate) {
            return base.Channel.GetAuthData(token, currentPluginTime, lastPluginUpdate);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetAuthDataAsync(string token, System.DateTime currentPluginTime, System.DateTime lastPluginUpdate) {
            return base.Channel.GetAuthDataAsync(token, currentPluginTime, lastPluginUpdate);
        }
    }
}
